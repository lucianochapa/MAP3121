Universidade de São Paulo
    Instituto de Matemática e Estatística - Departamento de Matemática Aplicada
    Escola Politécnica
MAP3121 - Métodos Numéricos e Aplicações - 2022.1
    Exercício-programa 02
Autoria
    Bruno Prasinos Bernal
    Luciano Chaparin Luisi

Breve descrição do projeto
    A funcionalidade do script `ep2.py` é executar 4 exemplos de uso de integrais duplas a partir de funções de Gauss
        1: 'Exemplo 1 - Volume de poliedros',
        2: 'Exemplo 2 - Área limitada por funções',
        3: 'Exemplo 3 - Área de uma superfície e volume sob esta',
        4: 'Exemplo 4 - Volume de sólido de rotação'
    Sua interface de usuário é através da linha de comando, pedindo do usuário o parâmetro de escolha
    O usuário deve escolher a função que deseja executar, os parâmetros são fixos
    O programa imprime os devidos resultados no terminal de volta ao usuário

######################################################################################################

Instruções de uso
    Dependências: Python=3.7, NumPy=1.21
    Para executar o programa, o diretório deve manter a estrutura interna
    Deve-se rodar o programa a partir do diretório root: 'MAP3121'
    Executar o arquivo 'ep2.py'
    Seguir as intruções na tela conforme determinação do programa
    

    Trechos de impressão do programa são indicados por três pontos
    Trechos de inserção do usuário são indicados por três sinais de maior
    
        ... MENU PRINCIPAL ---------------------------------------------------- 
        ... 1: 'Exemplo 1 - Volume de poliedros',
        ... 2: 'Exemplo 2 - Área limitada por funções',
        ... 3: 'Exemplo 3 - Área de uma superfície e volume sob esta',
        ... 4: 'Exemplo 4 - Volume de sólido de rotação'
        ... 5: Encerrar programa
        ... -------------------------------------------------------------------
        ... Escolha a ação desejada (1 a 5):
        >>> 1
    
    O exemplo acima apresenta o menu inicial que é impresso assim que o programa inicia. O usuário pode, então, selecionar uma das 3 funções principais
    O programa irá executar os cálculos pertinentes e retornará o resultado para cada numero de nós (entre 6, 8 e 10):

        ... Opção escolhida: Exemplo 1 - Volume de poliedros
        ... Volume de um cubo com arestas de comprimento 1
        ... (n=6 nós): Vol.cubo = 1.000000
        ... Volume de um cubo com arestas de comprimento 1
        ... (n=8 nós): Vol.cubo = 1.000000
        ... Volume de um cubo com arestas de comprimento 1
        ... (n=10 nós): Vol.cubo = 1.000000
        ... -------------------------------------------------------------------
        ... MENU PRINCIPAL ---------------------------------------------------- 

######################################################################################################

Arquivos e descrições

    ######################################################################################################

    './requirements/': diretório
        Descrição
            Contém uma lista dos pacotes e versões instalados

        'bio-env.txt': texto
            Descrição
                Pode ser usado para criar um ambiente Conda já instalando as dependências necessárias - win64
                
        'env.yml': texto
            Descrição
                Pode ser usado para criar um ambiente Conda já instalando as dependências necessárias, em qualquer OS
                No diretório root do projeto, usar o comando
                    Para criar um ambiente virtual localmente na pasta do projeto, onde `./env_name` é o nome para o ambiente
                    $ conda env create --prefix ./env_name -f ./requirements/env.yml

                    Para criar um ambiente no diretório conda, onde `env_name` é o nome para ambiente
                    $ conda env create -f ./requirements/env.yml --name env_name

        'requirements.txt': texto
            Descrição
                Contém a lista de pacotes instalados para ambiente virtual (dir './envs')

    ######################################################################################################

    'ep2.py': script
        Descrição
            Executa a UI para receber o usuário e selecionar o modo' desejado
            Uma vez escolhida a funcionalidade, roda a função adequada para resolver o problema
            Executa o script, retorna as informações pertinentes e volta ao menu de início
            Termina quando o usuário escolhe encerrar

        Dependências
            Módulo 'custom_functions'

    ######################################################################################################

    'custom_functions.py': módulo
        Descrição
            Contém todas funções utilizadas para os cálculos envolvidos no exercício-programa

    ######################################################################################################